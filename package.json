{
    "name": "boilerplate",
    "version": "1.0.0",
    "description": "playpal microservie boilerplate",
    "author": "",
    "private": true,
    "license": "UNLICENSED",
    "scripts": {
        "prebuild": "rimraf dist",
        "build": "nest build",
        "format:check": "prettier --check 'src/**/*.ts' 'test/**/*.ts'",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "start": "NODE_ENV=development nest start",
        "start:dev": "NODE_ENV=development nest start --watch",
        "start:debug": "NODE_ENV=development nest start --debug --watch",
        "start:prod": "node dist/main",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "test": "NODE_ENV=testing jest --runInBand --forceExit",
        "test:watch": "NODE_ENV=testing jest --watch --runInBand --forceExit",
        "test:cov": "NODE_ENV=testing jest --coverage --runInBand --forceExit",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "NODE_ENV=testing jest --config ./test/jest-e2e.json --runInBand --forceExit",
        "migration:generate": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:generate -n",
        "migration:create": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:create -n",
        "migration:run": "NODE_ENV=development ts-node --transpile-only ./node_modules/typeorm/cli.js --config ormconfig.json migration:run",
        "migration:run:testing": "ts-node --transpile-only ./node_modules/typeorm/cli.js --config testing.env migration:run",
        "migration:revert": "ts-node --transpile-only ./node_modules/typeorm/cli.js --config ormconfig.json migration:revert",
        "migration:revert:testing": "ts-node --transpile-only ./node_modules/typeorm/cli.js --config testing.env migration:revert",
        "seed:config": "ts-node ./node_modules/typeorm-seeding/dist/cli.js --configName development.env config",
        "seed:run": "ts-node ./node_modules/typeorm-seeding/dist/cli.js --configName development.env seed",
        "schema:drop": "ts-node ./node_modules/typeorm/cli.js schema:drop",
        "schema:sync": "ts-node ./node_modules/typeorm/cli.js schema:sync"
    },
    "dependencies": {
        "@hapi/joi": "^17.1.1",
        "@nestjs/common": "^7.6.15",
        "@nestjs/config": "^0.6.3",
        "@nestjs/core": "^7.6.15",
        "@nestjs/microservices": "^7.6.15",
        "@nestjs/platform-express": "^7.6.15",
        "@nestjs/typeorm": "^7.1.5",
        "@types/express-rate-limit": "^5.1.1",
        "@types/hapi__joi": "^17.1.6",
        "amqp-connection-manager": "^3.2.2",
        "amqplib": "^0.7.1",
        "express-rate-limit": "^5.2.6",
        "firebase-admin": "^9.6.0",
        "helmet": "^4.4.1",
        "moment": "^2.29.1",
        "pg": "^8.6.0",
        "reflect-metadata": "^0.1.13",
        "rimraf": "^3.0.2",
        "rxjs": "^6.6.7",
        "typeorm": "^0.2.32",
        "uuid": "^8.3.2"
    },
    "devDependencies": {
        "@nestjs/cli": "^7.6.0",
        "@nestjs/schematics": "^7.3.1",
        "@nestjs/testing": "^7.6.15",
        "@types/express": "^4.17.11",
        "@types/jest": "^26.0.22",
        "@types/node": "^14.14.41",
        "@types/supertest": "^2.0.11",
        "@types/uuid": "^8.3.0",
        "@typescript-eslint/eslint-plugin": "^4.22.0",
        "@typescript-eslint/parser": "^4.22.0",
        "eslint": "^7.24.0",
        "eslint-config-prettier": "^6.15.0",
        "eslint-plugin-prettier": "^3.4.0",
        "jest": "^26.6.3",
        "prettier": "^2.2.1",
        "supertest": "^6.1.3",
        "ts-jest": "^26.5.5",
        "ts-loader": "^8.1.0",
        "ts-node": "^9.1.1",
        "tsconfig-paths": "^3.9.0",
        "typescript": "^4.2.4"
    },
    "jest": {
        "moduleNameMapper": {
            "^src/(.*)$": "<rootDir>/$1"
        },
        "testTimeout": 30000,
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": "src",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node"
    }
}
